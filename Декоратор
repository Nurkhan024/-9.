using System;
using System.Collections.Generic;
using System.Linq;
namespace ReportingSystem
{
    public interface IReport
    {
        string Generate();
    }

    public class SalesReport : IReport
    {
        public string Generate()
        {
            return "Отчет по продажам: Продажа 1 - 1500тг, Продажа 2 - 3700тг.";
        }
    }

    public class UserReport : IReport
    {
        public string Generate()
        {
            return "Отчет по пользователям: Пользователь 1, Пользователь 2.";
        }
    }

    public abstract class ReportDecorator : IReport
    {
        protected IReport _report;

        public ReportDecorator(IReport report)
        {
            _report = report;
        }

        public virtual string Generate()
        {
            return _report.Generate();
        }
    }

    public class DateFilterDecorator : ReportDecorator
    {
        private DateTime _startDate;
        private DateTime _endDate;

        public DateFilterDecorator(IReport report, DateTime startDate, DateTime endDate) 
            : base(report)
        {
            _startDate = startDate;
            _endDate = endDate;
        }

        public override string Generate()
        {
            return $"{base.Generate()}\nФильтр по датам: с {_startDate.ToShortDateString()} по {_endDate.ToShortDateString()}";
        }
    }

    public class SortingDecorator : ReportDecorator
    {
        private string _criteria;

        public SortingDecorator(IReport report, string criteria) 
            : base(report)
        {
            _criteria = criteria;
        }

        public override string Generate()
        {
            return $"{base.Generate()}\nСортировка по: {_criteria}";
        }
    }

    public class CsvExportDecorator : ReportDecorator
    {
        public CsvExportDecorator(IReport report) : base(report) { }

        public override string Generate()
        {
            return $"{base.Generate()}\nЭкспорт в формат CSV выполнен.";
        }
    }

    public class PdfExportDecorator : ReportDecorator
    {
        public PdfExportDecorator(IReport report) : base(report) { }

        public override string Generate()
        {
            return $"{base.Generate()}\nЭкспорт в формат PDF выполнен.";
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            IReport salesReport = new SalesReport();

            IReport reportWithDateFilter = new DateFilterDecorator(salesReport, new DateTime(2024, 1, 1), new DateTime(2024, 12, 31));
            IReport reportWithSorting = new SortingDecorator(reportWithDateFilter, "дате");
            IReport reportWithCsvExport = new CsvExportDecorator(reportWithSorting);

            Console.WriteLine(reportWithCsvExport.Generate());

            IReport userReport = new UserReport();
            IReport userReportWithPdfExport = new PdfExportDecorator(userReport);
            Console.WriteLine(userReportWithPdfExport.Generate());

            Console.ReadLine();
        }
    }
}
